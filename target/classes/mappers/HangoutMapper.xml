<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hnu.houseweb.dao.HangoutMapper">
  <resultMap id="BaseResultMap" type="hnu.houseweb.entity.Hangout">
    <id column="userId" jdbcType="INTEGER" property="userId" />
    <id column="houseNo" jdbcType="INTEGER" property="houseNo" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="clientId" jdbcType="INTEGER" property="clientId" />
  </resultMap>
  <sql id="Base_Column_List">
    userId, houseNo, created, period, clientId
  </sql>
<!--  <select id="selectByPrimaryKey" parameterType="hnu.houseweb.entity.HangoutKey" resultMap="BaseResultMap">-->
<!--    select -->
<!--    <include refid="Base_Column_List" />-->
<!--    from hangout-->
<!--    where userId = #{userId,jdbcType=INTEGER}-->
<!--      and houseNo = #{houseNo,jdbcType=INTEGER}-->
<!--  </select>-->
  <delete id="deleteByPrimaryKey" parameterType="hnu.houseweb.entity.HangoutKey">
    delete from hangout
    where userId = #{userId,jdbcType=INTEGER}
      and houseNo = #{houseNo,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="hnu.houseweb.entity.Hangout">
    insert into hangout (userId, houseNo, created,
      period, clientId)
    values (#{userId,jdbcType=INTEGER}, #{houseNo,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP},
      #{period,jdbcType=INTEGER}, #{clientId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="hnu.houseweb.entity.Hangout">
    insert into hangout
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        userId,
      </if>
      <if test="houseNo != null">
        houseNo,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="clientId != null">
        clientId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="houseNo != null">
        #{houseNo,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hnu.houseweb.entity.Hangout">
    update hangout
    <set>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="clientId != null">
        clientId = #{clientId,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userId,jdbcType=INTEGER}
      and houseNo = #{houseNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hnu.houseweb.entity.Hangout">
    update hangout
    set created = #{created,jdbcType=TIMESTAMP},
      period = #{period,jdbcType=INTEGER},
      clientId = #{clientId,jdbcType=INTEGER}
    where userId = #{userId,jdbcType=INTEGER}
      and houseNo = #{houseNo,jdbcType=INTEGER}
  </update>
</mapper>